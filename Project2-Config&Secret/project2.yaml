# catalog-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-catalog
  namespace: shopfast
spec:
  replicas: 2
  selector:
    matchLabels:
      app: product-catalog
  template:
    metadata:
      labels:
        app: product-catalog
    spec:
      containers:
      - name: catalog
        image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.8.0
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
# catalog-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: product-catalog
  namespace: shopfast
spec:
  type: ClusterIP  # Only accessible within the cluster
  selector:
    app: product-catalog
  ports:
  - port: 80
    targetPort: 3550

---
# auth-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: shopfast
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth
        image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.8.0
        ports:
        - containerPort: 5050
        env:
        - name: PORT
          value: "5050"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "product-catalog:80"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
# auth-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: shopfast
spec:
  type: ClusterIP  # Only accessible within the cluster
  selector:
    app: auth-service
  ports:
  - port: 80
    targetPort: 5050

---
# recommendation-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendation
  namespace: shopfast
spec:
  replicas: 1
  selector:
    matchLabels:
      app: recommendation
  template:
    metadata:
      labels:
        app: recommendation
    spec:
      containers:
      - name: recommendation-engine
        image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.8.0
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "product-catalog:80"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1"
---
# recommendation-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: recommendation
  namespace: shopfast
spec:
  type: ClusterIP
  selector:
    app: recommendation
  ports:
  - port: 80
    targetPort: 8080

---
# frontend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: shopfast
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: web-ui
        image: gcr.io/google-samples/microservices-demo/frontend:v0.8.0
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "product-catalog:80"
        - name: CHECKOUT_SERVICE_ADDR
          value: "auth-service:80"
        - name: RECOMMENDATION_SERVICE_ADDR
          value: "recommendation:80"
        - name: CURRENCY_SERVICE_ADDR
          value: "product-catalog:80"  # Just using as a placeholder
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
# frontend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: shopfast
spec:
  type: LoadBalancer  # Exposes the service externally
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 8080